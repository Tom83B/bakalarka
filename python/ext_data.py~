# -*- coding: utf-8 -*-
import numpy as np
from interp_wrapper import interp
from scipy import interpolate
execfile('/home/tom/Documents/skola/bakalarka/python/const.py')

z = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (0))
arr_size = z.size
r = np.empty(arr_size)
r[0] = 0
for i in range (1,arr_size):
    r[i] = r[i-1]+(z[arr_size-i]-z[arr_size-i-1])

temperature = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (1))
pressure = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (2))
rho = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (3))
opac = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (4))
hscale = np.genfromtxt("/home/tom/Documents/skola/bakalarka/model_S.dat", usecols = (10))

mass = np.empty(arr_size)
mass[0] = 0

for i in range (1,arr_size):
    mass[i] = mass[i-1]+4*np.pi*rho[arr_size-i-1]*(r[i]*r[i])*(r[i]-r[i-1])

gravity = np.zeros(arr_size)

for i in range (0,arr_size-1):
    gravity[i] = G*mass[arr_size-i-1]/(r[arr_size-i-1]*r[arr_size-i-1])

T = interp(z,temperature)
p = interp(z,pressure)
g = interp(z,gravity)
r = interp(z,rho)
o = interp(z,opac)
H = interp(z,hscale)

#tabulka kombinacÃ­ http://webs.wichita.edu/physics/opacity/ a http://cdsweb.u-strasbg.fr/topbase/TheOP.html

op = np.genfromtxt('/home/tom/Documents/skola/bakalarka/python/opacity.dat')

logR = np.linspace(-8., 1., 19)
logT = np.linspace(3., 6., 61)

f = interpolate.RectBivariateSpline(logT, logR, op, kx=1, ky=1)

def opac(T, rho):
	T6 = T*1e-6
	R = (rho*1e-3)/T6**3
#	if R>10:
#		print "R  =  "
#		print R
	log_opac = f(np.log10(T),np.log10(R))
	return 10**log_opac*0.1